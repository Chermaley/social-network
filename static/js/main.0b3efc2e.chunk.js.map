{"version":3,"sources":["component/profile/profile.module.scss","component/profile/myPosts/post/post.module.scss","component/profile/myPosts/myPosts.module.scss","component/users/user/user.module.scss","component/nav/nav.module.scss","utils/validators/validators.js","component/nav/nav.js","component/settings/index.js","component/settings/settings.js","component/dialogs/dialogItem/dialog.js","component/dialogs/message/index.js","component/dialogs/message/message.js","redux/dialogsReducer.js","component/redirectHOC/redirectHOC.js","component/common/formsControl/formControls.js","component/dialogs/dialogsForm/index.js","component/dialogs/dialogsForm/dialogsForm.js","component/dialogs/index.js","component/dialogs/dialogs.js","component/common/spinner/index.js","component/common/spinner/spinner.js","assets/img/avatar.png","component/profile/profileStatus/profileStatusWithHooks.js","component/profile/profileDataForm.js","component/profile/profileInfo/profileInfo.js","component/profile/myPosts/post/index.js","component/profile/myPosts/post/post.js","api/api.js","redux/profileReducer.js","component/profile/myPosts/myPostForm/myPostForm.js","component/profile/myPosts/myPostForm/index.js","component/profile/myPosts/myPosts.js","component/profile/profile.js","component/profile/profileAPI.js","redux/usersReducer.js","component/users/user/index.js","component/users/user/user.js","component/users/paginator/index.js","component/users/paginator/paginator.js","component/users/Users.js","redux/userSelectors.js","component/users/usersAPI.js","component/header/header.js","redux/authReducer.js","component/header/headerAPI.js","component/login/loginForm/index.js","component/login/loginForm/loginForm.js","component/login/index.js","component/login/login.js","redux/appReducer.js","redux/sidebarReducer.js","redux/reduxStore.js","component/app/app.js","index.js","component/common/formsControl/formControls.module.scss","component/profile/profileInfo/profileInfo.module.scss","component/dialogs/dialogs.module.scss","component/users/paginator/paginator.module.scss","component/dialogs/dialogItem/dialog.module.scss","component/common/spinner/spinner.module.scss","component/header/header.module.scss"],"names":["module","exports","maxLength","connect","className","classes","navbar","items","item","activeClassName","active","to","Settings","Dialog","person","id","path","dialog","Message","label","message","ADD_MESSAGE","initialState","messages","dialogs","dialogsReducer","newMessage","state","action","type","withAuthRedirect","Component","isAuth","auth","props","FormControl","meta","hasError","touched","error","errorMessage","formControl","children","Textarea","input","restProps","Input","requiredField","value","DialogsForm","reduxForm","form","onSubmit","handleSubmit","Field","component","name","validate","Dialogs","compose","dialogsData","dialogsPage","messagesData","addNewMessage","map","dialogsItems","newMessageText","Spinner","preloader","spinner","ProfileStatusWithHooks","status","updateStatus","useState","editMode","setEditMode","setValue","useEffect","content","onBlur","autoFocus","onChange","e","target","onDoubleClick","ProfileDataReduxForm","Form","placeholder","Contact","contactTitle","contactValue","ProfileData","profile","toggleEditMode","contactsList","isOwner","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","descr","onClick","contacts","ProfileInfo","savePhoto","saveProfile","console","log","changeEditMode","photos","Object","keys","title","description","profilePhoto","alt","src","large","userPhoto","preventDefault","files","length","photo","initialValues","formData","Post","img","text","likesCount","axiosInstance","axios","create","withCredentials","baseURL","headers","usersApi","getUsers","a","currentPage","pageSize","get","res","data","followUser","post","unFollowUser","delete","authApi","email","password","rememberMe","profileApi","put","FormData","append","ADD_POST","SET_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","SAVE_PROFILE_DATA_SUCCESS","posts","setStatus","getProfile","dispatch","profileReducer","newPost","postText","filter","maxLength10","MyPostForm","MyPosts","React","memo","postData","addNewPost","postBlock","profilePage","newPostText","Profile","sa","ProfileAPI","saveProfileData","authUserId","refreshProfileData","match","getStatus","params","history","push","this","prevProps","withRouter","userId","resultCode","getState","CHANGE_TERM","TOGGLE_FOLLOW","TOGGLE_LOADING","SET_USERS","SET_TOTAL_USERS_COUNT","SET_CURRENT_PAGE","TOGGLE_FOLLOWING_PROGRESS","users","totalUsersCount","isLoading","followingInProgress","term","follow","toggleLoadingStatus","toggleFollowingProgress","isFetching","followUnfollowFlow","apiMethod","usersReducer","user","followed","usersCount","pageNumber","User","onFollowClick","followStatus","location","photoUrl","followUnfollow","disabled","some","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","p","cn","selectedPage","Users","usersData","onChangeTerm","small","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsLoadingStatus","getIsFollowingInProgress","UsersAPI","changeTerm","requestUsers","setCurrentPage","totalCount","Header","login","logout","header","loginBlock","SET_USER_DATA","DELETE_USER_DATA","setAuthUserData","getAuth","authReducer","HeaderAPI","LoginForm","summaryError","Login","stopSubmit","_error","INITIALIZED_SUCCESS","initialized","appReducer","friends","sidebarReducer","reducers","combineReducers","sidebar","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","News","lazy","Music","App","initializeApp","fallback","render","AppContainer","then","MainApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0b3efc2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__1d7zg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__1y2Bx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"myPosts_postBlock__1gIeR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"user_photo__3bUfE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"nav_navbar__1sgBY\",\"items\":\"nav_items__1HLGi\",\"item\":\"nav_item__7oIdo\",\"active\":\"nav_active__1Qdkv\"};","export const requiredField = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n};\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","import React from 'react';\r\nimport classes from './nav.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n// import FriendListWrapper from \"./friendList/firendListWrapper\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <nav className={classes.navbar}>\r\n            <div className={classes.items}>\r\n                <div className={classes.item}><NavLink activeClassName={classes.active} to='/profile'>Profile</NavLink></div>\r\n                <div className={classes.item}><NavLink activeClassName={classes.active} to='/dialogs'>Messages</NavLink></div>\r\n                <div className={classes.item}><NavLink activeClassName={classes.active} to='/users'>Users</NavLink></div>\r\n                <div className={classes.item}><NavLink activeClassName={classes.active} to='/news'>News</NavLink></div>\r\n                <div className={classes.item}><NavLink activeClassName={classes.active} to='/music'>Music</NavLink></div>\r\n                <div className={classes.item}><NavLink activeClassName={classes.active} to='/settings'>Settings</NavLink></div>\r\n            </div>\r\n            {/*<FriendListWrapper/>*/}\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default connect()(NavBar);","import Settings from \"./settings\";\r\nexport default Settings;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <p>Settings</p>\r\n    )\r\n}\r\nexport default Settings;","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from './dialog.module.scss';\r\n\r\nconst Dialog = ({person, id}) => {\r\n    let path = `/dialogs/${id}`;\r\n    return (\r\n        <div className={classes.dialog + ' ' + classes.active}>\r\n            <NavLink to={path}>{person}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nDialog.propTypes = {\r\n    person: PropTypes.string,\r\n    id: PropTypes.number,\r\n};\r\n\r\nexport default Dialog;","import Message from \"./message\";\r\nexport default Message;","import classes from \"./message.module.scss\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Message = ({label}) => {\r\n    return <div className={classes.message}>{label}</div>;\r\n};\r\nMessage.propTypes = {\r\n    label: PropTypes.any\r\n};\r\n\r\nexport default Message;","\r\nconst ADD_MESSAGE = 'DIALOGS/ADD_MESSAGE';\r\n\r\nconst initialState = {\r\n        messages: [\r\n            {id: 1, message:'hey'},\r\n            {id: 2, message:'lol'}\r\n        ],\r\n        dialogs: [\r\n            {person: 'Andrey', id: 1},\r\n            {person: 'Sergey', id: 2}\r\n        ]\r\n};\r\n\r\n\r\nexport const dialogsReducer = (state = initialState, action) => {\r\n    let newMessage;\r\n\r\n    switch (action.type) {\r\n        case  ADD_MESSAGE:\r\n            newMessage = {\r\n                id: 5,\r\n                message: action.message\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default dialogsReducer;\r\nexport const addNewMessage = (message) => ({type: ADD_MESSAGE, message});","import {Redirect} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport React from \"react\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    const WithRedirect = ({isAuth, props}) => {\r\n        if (!isAuth) return <Redirect to={'/login'}/>;\r\n        return (\r\n            <Component {...props}/>\r\n        );\r\n    };\r\n    WithRedirect.propTypes = {\r\n        isAuth: PropTypes.bool,\r\n        props: PropTypes.object\r\n    };\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        };\r\n    };\r\n    return connect(mapStateToProps)(WithRedirect);\r\n};","\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from './formControls.module.scss';\r\n\r\nconst FormControl = ({meta, ...props}) => {\r\n    const hasError =  meta.touched && meta.error;\r\n    const errorMessage = hasError ? <span>{ meta.error}</span>: null;\r\n\r\n    return (\r\n        <div className={!hasError ? classes.formControl : classes.formControl + ' ' + classes.error}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {errorMessage}\r\n        </div>\r\n    );\r\n};\r\nFormControl.propTypes = {\r\n    meta: PropTypes.object,\r\n    children: PropTypes.any\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...restProps} {...input}/></FormControl>;\r\n};\r\nTextarea.propTypes = {\r\n    input: PropTypes.object,\r\n    meta: PropTypes.object\r\n};\r\n\r\nexport const Input  = (props) => {\r\n    const {input, type, ...restProps} = props;\r\n    return <FormControl {...props}><input type={type} {...input} {...restProps}/></FormControl>;\r\n};\r\n\r\nInput.propTypes = {\r\n    input: PropTypes.object,\r\n    type: PropTypes.string,\r\n    meta: PropTypes.object\r\n};","import DialogsForm from \"./dialogsForm\";\r\n\r\nexport default DialogsForm;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport PropTypes from 'prop-types';\r\nimport {Textarea} from \"../../common/formsControl/formControls\";\r\nimport {requiredField} from \"../../../utils/validators\";\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field\r\n                component={Textarea}\r\n                name={'newMessageText'}\r\n                validate={[requiredField]}/>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\nDialogsForm.propTypes = {handleSubmit: PropTypes.func};\r\nconst DialogsFormRedux = reduxForm({form: 'addMessageForm'})(DialogsForm);\r\nexport default DialogsFormRedux;\r\n","import Dialogs from \"./dialogs\";\r\nexport default Dialogs;","import React from 'react';\r\nimport classes from './dialogs.module.scss';\r\nimport Dialog from './dialogItem/dialog';\r\nimport Message from './message';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport {addNewMessage} from \"../../redux/dialogsReducer\";\r\nimport {withAuthRedirect} from \"../redirectHOC/redirectHOC\";\r\nimport {compose} from \"redux\";\r\nimport DialogsFormRedux from \"./dialogsForm\";\r\n\r\n\r\nconst Dialogs = ({dialogsData, messagesData, addNewMessage}) => {\r\n\r\n    const addMessage = (value) => {\r\n        const message = value.newMessageText;\r\n        addNewMessage(message);\r\n    };\r\n\r\n    const dialogs = dialogsData.map(({id, person}) => {\r\n        return <Dialog key={id} id={id} person={person}/>;\r\n    });\r\n\r\n    const messages = messagesData.map(({message,id}) => {\r\n        return <Message key={id} label={message}/>;\r\n    });\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogs}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messages}</div>\r\n                <DialogsFormRedux onSubmit={addMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nDialogs.propTypes = {\r\n    dialogsData: PropTypes.array,\r\n    messagesData: PropTypes.array,\r\n    addNewMessage: PropTypes.func,\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.dialogsPage.dialogs,\r\n        messagesData: state.dialogsPage.messages\r\n    };\r\n};\r\n\r\nexport default compose(withAuthRedirect, connect(mapStateToProps, {addNewMessage})) (Dialogs);","import Spinner from \"./spinner\";\r\nexport default Spinner;","import React from \"react\";\r\nimport classes from './spinner.module.scss';\r\nconst Spinner = () => {\r\n    return (\r\n        <div className={classes.preloader}>\r\n            <div className={classes.spinner}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/avatar.00971467.png\";","import React, {useEffect, useState} from \"react\";\r\n\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst ProfileStatusWithHooks = ({status, updateStatus}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false);\r\n    const [value, setValue] = useState(status);\r\n\r\n    useEffect(() => {\r\n        setValue(status);\r\n    }, [status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        updateStatus(value);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setValue(e.target.value);\r\n    };\r\n\r\n    const content = editMode\r\n        ? <input\r\n            onBlur={deactivateEditMode}\r\n            autoFocus\r\n            type=\"text\"\r\n            onChange={onStatusChange}\r\n            value={value}/>\r\n        : <span onDoubleClick={activateEditMode}>{status || '...'}</span>;\r\n    return (\r\n        <>\r\n            <div>\r\n                {content}\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","// import classes from \"./profileInfo/profileInfo.module.scss\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Field, Form, reduxForm} from \"redux-form\";\r\nimport {Input, Textarea} from \"../common/formsControl/formControls\";\r\nimport {requiredField} from \"../../utils/validators\";\r\n\r\nconst ProfileDataForm = ({handleSubmit}) => {\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit}>\r\n                <div>FullName: <Field name={'fullName'} placeholder={\"Your full name\"} validate={[requiredField]}\r\n                                      component={Input}/></div>\r\n                <div>About me: <Field name={'aboutMe'} placeholder={\"About me\"} component={Input}/></div>\r\n                <div>looking for a job: <Field name={'lookingForAJob'} component={Input} type={'checkbox'}/></div>\r\n                <div>My professional skills: <Field name={'lookingForAJobDescription'}\r\n                                                    placeholder={'Your professional skills ?'} component={Textarea}/>\r\n                </div>\r\n                <button>Save</button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nProfileDataForm.propTypes = {\r\n    fullName: PropTypes.string,\r\n    aboutMe: PropTypes.string,\r\n    lookingForAJob: PropTypes.string,\r\n    lookingForAJobDescription: PropTypes.string,\r\n    contactsList: PropTypes.array,\r\n    toggleEditMode: PropTypes.func,\r\n    handleSubmit: PropTypes.func\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\nexport default ProfileDataReduxForm;","import classes from \"./profileInfo.module.scss\";\r\nimport React, {useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from \"../../common/spinner\";\r\nimport userPhoto from '../../../assets/img/avatar.png';\r\nimport ProfileStatusWithHooks from \"../profileStatus/profileStatusWithHooks\";\r\nimport ProfileDataForm from \"../profileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    console.log(profile);\r\n    const [editMode, changeEditMode] = useState(false);\r\n\r\n    const toggleEditMode = () => {\r\n        if (!editMode) {\r\n            changeEditMode(true);\r\n        } else {\r\n            changeEditMode(false);\r\n        }\r\n    };\r\n\r\n    const onPhotoSelected = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.files.length === 1) {\r\n            const photo = e.target.files[0];\r\n            savePhoto(photo);\r\n        }\r\n    };\r\n\r\n    const onFormSubmit = (formData) => {\r\n        toggleEditMode();\r\n        saveProfile(formData);\r\n    };\r\n\r\n    if (!profile) {\r\n        return <Spinner/>;\r\n    }\r\n\r\n    const {photos, contacts} = profile;\r\n\r\n    const contactsList = Object.keys(contacts).map((title) => {\r\n        return <Contact key={title} contactTitle={title} contactValue={contacts[title]}/>;\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.description}>\r\n                <div>\r\n                    <img className={classes.profilePhoto} alt={'user photo'} src={photos.large || userPhoto}/>\r\n                    {isOwner && <input onChange={onPhotoSelected} type=\"file\"/>}\r\n                    <b>status: </b><ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                </div>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile}\r\n                                       contactsList={contactsList}\r\n                                       toggleEditMode={toggleEditMode}\r\n                                       onSubmit={onFormSubmit}/>\r\n                    : <ProfileData contactsList={contactsList}\r\n                                   isOwner={isOwner}\r\n                                   profile={profile}\r\n                                   toggleEditMode={toggleEditMode}/>}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>{contactTitle} : {contactValue}</div>\r\n    );\r\n};\r\n\r\nconst ProfileData = ({profile, toggleEditMode, contactsList, isOwner}) => {\r\n    const {fullName, aboutMe, lookingForAJob, lookingForAJobDescription} = profile;\r\n    return (\r\n        <div className={classes.descr}>\r\n            data\r\n            {isOwner ? <button onClick={toggleEditMode}>edit</button> : null}\r\n            <div>FullName: {fullName}</div>\r\n            <div>About me: {aboutMe}</div>\r\n            <div>{lookingForAJob ? \"looking for a job\" : \"job?\"}</div>\r\n            <div>Skills: {lookingForAJob ? lookingForAJobDescription : null}</div>\r\n            <div>Contacts:</div>\r\n            <div className={classes.contacts}>{contactsList}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nProfileData.propTypes = {\r\n    profile: PropTypes.object,\r\n    toggleEditMode: PropTypes.func,\r\n    saveProfile: PropTypes.func,\r\n    contactsList: PropTypes.array,\r\n    isOwner: PropTypes.bool\r\n};\r\n\r\nContact.propTypes = {\r\n    contactTitle: PropTypes.string,\r\n    contactValue: PropTypes.string\r\n};\r\n\r\nProfileInfo.propTypes = {\r\n    profile: PropTypes.object,\r\n    photos: PropTypes.object,\r\n    status: PropTypes.any,\r\n    updateStatus: PropTypes.func,\r\n    isOwner: PropTypes.bool,\r\n    savePhoto: PropTypes.func,\r\n    saveProfile: PropTypes.func\r\n};\r\n\r\nexport default ProfileInfo;","import Post from './post';\r\nexport default Post;","\r\nimport React from 'react';\r\nimport classes from './post.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Post = ({img, text, likesCount}) => {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img src={img} alt='avatar'/>\r\n            {text}\r\n            <div>\r\n                <span>like {likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    img: PropTypes.string,\r\n    text: PropTypes.string,\r\n    likesCount: PropTypes.number\r\n};\r\n\r\nexport default Post;","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL:\"https://social-network.samuraijs.com/api/1.0\",\r\n    headers: {\"API-KEY\": \"f68a4cda-2f4c-4785-816b-4190cdf2b12c\"}\r\n});\r\n\r\nexport const usersApi = {\r\n    getUsers : async (currentPage = 1, pageSize = 10) => {\r\n        const res = await axiosInstance.get(`/users?page=${currentPage}&count=${pageSize}`);\r\n        return await res.data;\r\n    },\r\n    followUser : (id) => {\r\n        return axiosInstance.post(`/follow/${id}`);\r\n    },\r\n    unFollowUser : (id) => {\r\n        return axiosInstance.delete(`/follow/${id}`);\r\n    }\r\n};\r\n\r\nexport const authApi = {\r\n    me: () => {\r\n        return axiosInstance.get(`/auth/me`);\r\n    },\r\n    login: (email, password ,rememberMe) => {\r\n        return axiosInstance.post(`/auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout: () => {\r\n        return axiosInstance.delete('/auth/login');\r\n    }\r\n};\r\n\r\nexport const profileApi = {\r\n    getProfile: (id) => {\r\n        return axiosInstance.get(`/profile/${id}`);\r\n    },\r\n    getStatus: (id) => {\r\n        return axiosInstance.get(`/profile/status/${id}`);\r\n    },\r\n    updateStatus: (status) => {\r\n        return axiosInstance.put(`/profile/status`, {status: status});\r\n    },\r\n    uploadUserPhoto: (photo) => {\r\n        const formData = new FormData;\r\n        formData.append(\"image\", photo);\r\n        return axiosInstance.put('/profile/photo', formData, {\r\n            headers: {\r\n                'Content-type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    uploadUserData: (profile) => {\r\n        return axiosInstance.put('/profile', profile);\r\n    }\r\n};\r\n\r\n\r\n","import {profileApi} from \"../api/api\";\r\n\r\nconst ADD_POST = 'PROFILE/ADD-POST';\r\nconst SET_PROFILE = 'PROFILE/SET_PROFILE';\r\nconst SET_STATUS = 'PROFILE/SET_STATUS';\r\nconst DELETE_POST = 'PROFILE/DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'PROFILE/SAVE_PHOTO_SUCCESS';\r\nconst SAVE_PROFILE_DATA_SUCCESS = 'SAVE_PROFILE_DATA_SUCCESS';\r\nconst initialState = {\r\n    posts: [\r\n        {\r\n            img: 'https://cdn4.iconfinder.com/data/icons/small-n-flat/24/user-alt-512.png',\r\n            text: 'wow',\r\n            likesCount: 2,\r\n            id: 1\r\n        },\r\n\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    let newPost;\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            newPost = {\r\n                id: 2,\r\n                text: action.postText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(({id}) => id !== action.id)\r\n            };\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos}\r\n            };\r\n        case SAVE_PROFILE_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, ...action.data}\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addNewPost = (postText) => ({type: ADD_POST, postText});\r\nconst setProfile = (profile) => ({type: SET_PROFILE, profile});\r\nconst setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (id) => ({type: DELETE_POST, id});\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\r\nexport const saveProfileDataSuccess = (data) => ({type: SAVE_PROFILE_DATA_SUCCESS, data});\r\n\r\nexport const getProfile = (id) => async (dispatch) => {\r\n    let res = await profileApi.getProfile(id);\r\n    dispatch(setProfile(res.data));\r\n};\r\n\r\n\r\nexport const getStatus = (id) => async (dispatch) => {\r\n    let res = await profileApi.getStatus(id);\r\n    dispatch(setStatus(res.data));\r\n\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let res = await profileApi.updateStatus(status);\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport const savePhoto = (photo) => async (dispatch) => {\r\n    let res = await profileApi.uploadUserPhoto(photo);\r\n    console.log(res);\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(res.data.data.photos));\r\n    }\r\n};\r\n\r\nexport const saveProfileData = (data) => async (dispatch, getState) => {\r\n    let res = await profileApi.uploadUserData(data);\r\n    console.log(res);\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getProfile(getState().auth.userId));\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport {maxLengthCreator, requiredField} from \"../../../../utils/validators\";\r\nimport {Textarea} from \"../../../common/formsControl/formControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nfunction MyPostForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'Enter your post text'} validate={[requiredField, maxLength10]} name={\"postText\"} component={Textarea}/>\r\n            <button>Add post</button>\r\n        </form>);\r\n}\r\n\r\nMyPostForm.propTypes = {handleSubmit: PropTypes.func};\r\n\r\nconst MyPostFormRedux = reduxForm({form: 'postForm'})(MyPostForm);\r\nexport default MyPostFormRedux;\r\n","import MyPostForm from \"./myPostForm\";\r\n\r\nexport default MyPostForm;","import React from 'react';\r\nimport Post from './post';\r\nimport classes from './myPosts.module.scss';\r\nimport PropTypes from \"prop-types\";\r\nimport {addNewPost} from \"../../../redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport MyPostForm from \"./myPostForm\";\r\n\r\n\r\n\r\n// eslint-disable-next-line react/display-name\r\nconst MyPosts = React.memo(props => {\r\n    let {postData, addNewPost} = props;\r\n\r\n    const posts = postData.map(({img, text, id, likesCount}) => {\r\n        return <Post key={id} img={img} text={text} likesCount={likesCount}/>;\r\n    });\r\n\r\n    const addPost = (value) => {\r\n        const post = value.postText;\r\n        addNewPost(post);\r\n    };\r\n    return (\r\n        <div className={classes.postBlock}>\r\n            <h3>My post</h3>\r\n            <div>New post</div>\r\n            <MyPostForm onSubmit={addPost}/>\r\n            <div>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n\r\nMyPosts.propTypes = {\r\n    postData: PropTypes.array,\r\n    addNewPost: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postData: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {addNewPost})(MyPosts);","import React from 'react';\r\nimport classes from './profile.module.scss';\r\nimport ProfileInfo from \"./profileInfo/profileInfo\";\r\nimport PropTypes from 'prop-types';\r\nimport MyPosts from \"./myPosts/myPosts\";\r\n\r\n\r\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    return (\r\n        <div className={classes.profile}>\r\n            <ProfileInfo sa saveProfile={saveProfile} savePhoto={savePhoto} isOwner={isOwner} status={status} profile={profile} updateStatus={updateStatus}/>\r\n            <MyPosts/>\r\n        </div>\r\n    );\r\n};\r\nProfile.propTypes = {\r\n    profile: PropTypes.object,\r\n    status: PropTypes.any,\r\n    updateStatus: PropTypes.func,\r\n    isOwner: PropTypes.bool,\r\n    savePhoto: PropTypes.func,\r\n    saveProfile: PropTypes.func\r\n};\r\nexport default Profile;","import Profile from \"./profile\";\r\nimport React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../redirectHOC/redirectHOC\";\r\nimport {compose} from \"redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfileData, updateStatus} from \"../../redux/profileReducer\";\r\n\r\nclass ProfileAPI extends Component {\r\n\r\n    static propTypes = {\r\n        profile: PropTypes.any,\r\n        getProfile: PropTypes.func,\r\n        getStatus: PropTypes.func,\r\n        match: PropTypes.object,\r\n        status: PropTypes.any,\r\n        updateStatus: PropTypes.func,\r\n        authUserId: PropTypes.any,\r\n        history: PropTypes.any,\r\n        savePhoto: PropTypes.func,\r\n        saveProfileData: PropTypes.func\r\n    };\r\n\r\n    savePhoto = (photo) => {\r\n        const {savePhoto} = this.props;\r\n        savePhoto(photo);\r\n    };\r\n\r\n    saveProfile = (profile) => {\r\n        const {saveProfileData, authUserId} = this.props;\r\n        profile['userId'] = authUserId;\r\n        saveProfileData(profile);\r\n    };\r\n\r\n    refreshProfileData = () => {\r\n        const {getProfile, match, getStatus, authUserId} = this.props;\r\n        let id = match.params.id;\r\n        if (!id) {\r\n            id = authUserId;\r\n            if (!id) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        getProfile(id);\r\n        getStatus(id);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfileData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params.id !== this.props.match.params.id) {\r\n            this.refreshProfileData();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {profile, status, updateStatus} = this.props;\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.id}\r\n                     profile={profile}\r\n                     status={status}\r\n                     savePhoto={(photo) => this.savePhoto(photo)}\r\n                     updateStatus={updateStatus}\r\n                     saveProfile={this.saveProfile}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.auth.userId,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    withRouter, connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfileData}))(ProfileAPI);\r\n\r\n","import {usersApi} from \"../api/api\";\r\n\r\nconst CHANGE_TERM = 'USERS/CHANGE_TERM';\r\nconst TOGGLE_FOLLOW = 'USERS/TOGGLE_FOLLOW';\r\nconst TOGGLE_LOADING = 'USERS/TOGGLE_LOADING';\r\nconst SET_USERS = 'USERS/SET_USERS';\r\nconst SET_TOTAL_USERS_COUNT = 'USERS/SET_TOTAL_USERS_COUNT';\r\nconst SET_CURRENT_PAGE = 'USERS/SET_CURRENT_PAGE';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'USERS/TOGGLE_FOLLOWING_PROGRESS';\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 100,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isLoading: false,\r\n    followingInProgress: [],\r\n    term: ''\r\n};\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            };\r\n        case TOGGLE_FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map((user) => {\r\n                    if (user.id === action.id) {\r\n                        return {...user, followed: !user.followed};\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.usersCount\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.pageNumber\r\n            };\r\n        case TOGGLE_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: !state.isLoading\r\n            };\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : state.followingInProgress.filter(id => id !== action.id)\r\n            };\r\n        case CHANGE_TERM:\r\n            return {\r\n                ...state,\r\n                term: action.term\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const follow = (id) => ({type: TOGGLE_FOLLOW, id});\r\nexport const toggleLoadingStatus = () => ({type: TOGGLE_LOADING});\r\nexport const changeTerm = (term) => ({type: CHANGE_TERM, term});\r\nexport const setTotalUsersCount = (usersCount) => ({type: SET_TOTAL_USERS_COUNT, usersCount});\r\nexport const setCurrentPage = (pageNumber) => ({type: SET_CURRENT_PAGE, pageNumber});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const toggleFollowingProgress = (id, isFetching) => ({type: TOGGLE_FOLLOWING_PROGRESS, id, isFetching});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleLoadingStatus());\r\n    let res = await usersApi.getUsers(currentPage, pageSize);\r\n    dispatch(toggleLoadingStatus());\r\n    dispatch(setTotalUsersCount(res.totalCount));\r\n    dispatch(setUsers(res.items));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, action, apiMethod) => {\r\n    dispatch(toggleFollowingProgress(id, true));\r\n    let res = await apiMethod(id);\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(action(id));\r\n        dispatch(toggleFollowingProgress(id, false));\r\n    }\r\n};\r\n\r\nexport const followUser = (id) => (dispatch) => {\r\n    followUnfollowFlow(dispatch, id, follow, usersApi.followUser);\r\n};\r\nexport const unFollowUser = (id) => async (dispatch) => {\r\n    followUnfollowFlow(dispatch, id, follow, usersApi.unFollowUser);\r\n};\r\n\r\nexport default usersReducer;","import User from \"./user\";\r\nexport default User;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport classes from './user.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({fullName, onFollowClick, followStatus, location, photoUrl, status, id: userId, followingInProgress}) => {\r\n    const followUnfollow = followStatus ? 'unfollow' : 'follow';\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={`/profile/${userId}`}>\r\n                        <img src={photoUrl} alt='user photo' className={classes.photo}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    <button disabled={followingInProgress.some(id => id === userId)} onClick={onFollowClick}>{followUnfollow}</button>\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{fullName}</div><div>{status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{location}</div>\r\n                </span>\r\n            </span>\r\n\r\n        </div>\r\n    );\r\n};\r\nUser.propTypes = {\r\n    fullName: PropTypes.any,\r\n    status: PropTypes.any,\r\n    onFollowClick: PropTypes.func,\r\n    followStatus: PropTypes.bool,\r\n    photoUrl: PropTypes.string,\r\n    location: PropTypes.any,\r\n    id: PropTypes.any,\r\n    followingInProgress: PropTypes.array\r\n\r\n};\r\nexport default User;","import Paginator from \"./paginator\";\r\n\r\nexport default Paginator;","import React, {useState} from 'react';\r\nimport styles from \"./paginator.module.scss\";\r\nimport cn from \"classnames\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1);\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={() => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>;\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1);\r\n        }}>NEXT</button>}\r\n\r\n\r\n    </div>;\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport User from './user';\r\nimport userPhoto from '../../assets/img/avatar.png';\r\nimport PropTypes from 'prop-types';\r\nimport Paginator from \"./paginator\";\r\nimport Spinner from \"../common/spinner\";\r\n\r\n\r\nconst Users = (props) => {\r\n    const {\r\n        usersData,\r\n        term,\r\n        totalUsersCount,\r\n        pageSize,\r\n        currentPage,\r\n        onChangeTerm,\r\n        onPageChanged,\r\n        followingInProgress,\r\n        followUser,\r\n        unFollowUser,\r\n        isLoading\r\n    } = props;\r\n\r\n\r\n    const users = usersData.map(({id, name, status, followed, photos}) => {\r\n        return <User\r\n            onFollowClick={() => followed ? unFollowUser(id) : followUser(id)}\r\n            key={id}\r\n            photoUrl={photos.small ? photos.small : userPhoto}\r\n            followStatus={followed}\r\n            fullName={name}\r\n            location={'Russia'}\r\n            status={status}\r\n            id={id}\r\n            followingInProgress={followingInProgress}/>;\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Paginator totalItemsCount={totalUsersCount}\r\n                       pageSize={pageSize}\r\n                       currentPage={currentPage}\r\n                       onPageChanged={onPageChanged}/>\r\n\r\n            <textarea onChange={onChangeTerm} value={term}/>\r\n            {isLoading ? <Spinner/> : users}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nUsers.propTypes = {\r\n    usersData: PropTypes.array,\r\n    term: PropTypes.any,\r\n    totalUsersCount: PropTypes.number,\r\n    pageSize: PropTypes.number,\r\n    currentPage: PropTypes.number,\r\n    onChangeTerm: PropTypes.func,\r\n    onPageChanged: PropTypes.func,\r\n    followingInProgress: PropTypes.array,\r\n    followUser: PropTypes.func,\r\n    unFollowUser: PropTypes.func,\r\n    isLoading: PropTypes.bool\r\n};\r\nexport default Users;","\r\nexport const getUsers = (state) => {\r\n  return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return  state.usersPage.currentPage;\r\n};\r\nexport const getIsLoadingStatus = (state) => {\r\n    return  state.usersPage.isLoading;\r\n};\r\nexport const getIsFollowingInProgress = (state) => {\r\n    return  state.usersPage.followingInProgress;\r\n};","import PropTypes from 'prop-types';\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    changeTerm,\r\n    follow, followUser,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleFollowingProgress, unFollowUser\r\n} from '../../redux/usersReducer';\r\nimport Users from './Users';\r\n\r\nimport {\r\n    // getUsers,\r\n    getCurrentPage,\r\n    getIsFollowingInProgress,\r\n    getIsLoadingStatus,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/userSelectors\";\r\n\r\nclass UsersAPI extends Component {\r\n\r\n    static propTypes = {\r\n        usersData: PropTypes.array,\r\n        changeTerm: PropTypes.func,\r\n        term: PropTypes.any,\r\n        totalUsersCount: PropTypes.number,\r\n        pageSize: PropTypes.number,\r\n        currentPage: PropTypes.number,\r\n        setCurrentPage: PropTypes.func,\r\n        isLoading: PropTypes.bool,\r\n        followingInProgress: PropTypes.array,\r\n        requestUsers: PropTypes.func,\r\n        followUser: PropTypes.func,\r\n        unFollowUser: PropTypes.func\r\n    };\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize, requestUsers} = this.props;\r\n        requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onChangeTerm = (e) => {\r\n        const value = e.target.value;\r\n        this.props.changeTerm(value);\r\n    };\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize, requestUsers, setCurrentPage} = this.props;\r\n        setCurrentPage(pageNumber);\r\n        requestUsers(pageNumber, pageSize);\r\n\r\n    };\r\n\r\n    render() {\r\n        const {usersData, followUser, unFollowUser, term, totalUsersCount, pageSize, currentPage, isLoading, followingInProgress} = this.props;\r\n        return (\r\n            <>\r\n                    <Users\r\n                        isLoading={isLoading}\r\n                        usersData={usersData}\r\n                        term={term}\r\n                        totalUsersCount={totalUsersCount}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onChangeTerm={this.onChangeTerm}\r\n                        onPageChanged={this.onPageChanged}\r\n                        followingInProgress={followingInProgress}\r\n                        followUser={followUser}\r\n                        unFollowUser={unFollowUser}\r\n                    />\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersData: getUsers(state),\r\n        term: state.usersPage.term,\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        pageSize: getPageSize(state),\r\n        currentPage: getCurrentPage(state),\r\n        isLoading: getIsLoadingStatus(state),\r\n        followingInProgress: getIsFollowingInProgress(state)\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    changeTerm,\r\n    follow,\r\n    setCurrentPage,\r\n    toggleFollowingProgress,\r\n    requestUsers,\r\n    followUser,\r\n    unFollowUser,\r\n})(UsersAPI);","import React from 'react';\r\nimport classes from './header.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n// eslint-disable-next-line react/prop-types\r\nconst Header = ({isAuth, login, logout}) => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img alt='logo' src='https://i.exclipart.com/images/mushroom-clipart-realistic-2.png'/>\r\n            <div className={classes.loginBlock}>\r\n                {isAuth\r\n                    ? <div><div>{login}</div> <span onClick={logout}>Logout</span></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","/* eslint-disable */\r\nimport {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'AUTH/SET_USER_DATA';\r\nconst DELETE_USER_DATA = 'AUTH/DELETE_USER_DATA';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            };\r\n        case DELETE_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                userId: null,\r\n                email: null,\r\n                login: null,\r\n                isAuth: false\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const setAuthUserData = (userId, email, login) => ({type: SET_USER_DATA, data: {userId, email, login}});\r\nconst deleteAuthUserData = () => ({type: DELETE_USER_DATA});\r\nexport const getAuth = () => async (dispatch) => {\r\n    let res = await authApi.me()\r\n    if (res.data.resultCode === 0) {\r\n        const {id, login, email} = res.data.data;\r\n        dispatch(setAuthUserData(id, email, login));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n\r\n    let res = await authApi.login(email, password, rememberMe)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        let message = res.data.messages !== 0 ? res.data.messages[0] : \"some error\"\r\n        let action = stopSubmit(\"login\", {_error: message});\r\n        dispatch(action);\r\n    }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let res = await authApi.logout();\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(deleteAuthUserData());\r\n    }\r\n\r\n};\r\nexport default authReducer;","import React, {Component} from 'react';\r\nimport Header from './header';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {logout} from \"../../redux/authReducer\";\r\nclass HeaderAPI extends Component {\r\n\r\n    static propTypes = {\r\n        setAuth: PropTypes.func,\r\n        isAuth: PropTypes.bool,\r\n        login: PropTypes.any,\r\n        logout: PropTypes.func\r\n    };\r\n\r\n    render() {\r\n        const {isAuth, login, logout} = this.props;\r\n        return (\r\n            <Header {...this.props} logout={logout} isAuth={isAuth} login={login}/>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n    };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderAPI);","import LoginForm from \"./loginForm\";\r\n\r\nexport default LoginForm;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Input} from \"../../common/formsControl/formControls\";\r\nimport {requiredField} from \"../../../utils/validators\";\r\nimport classes from '../../common/formsControl/formControls.module.scss';\r\n\r\nconst LoginForm = (props) => {\r\n    const {error} = props;\r\n    const summaryError = error ? <div className={classes.summaryError}>{error}</div> : null;\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field validate={[requiredField]} type=\"text\" name={'email'} placeholder={'login'} component={Input}/>\r\n            </div>\r\n            <div><Field validate={[requiredField]} type=\"password\" name={'password'} placeholder={'password'}\r\n                        component={Input}/></div>\r\n            <div><Field type=\"checkbox\" name={'rememberMe'} component={Input}/>remember me</div>\r\n            {summaryError}\r\n            <div>\r\n                <button>Submit</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n    handleSubmit: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import Login from \"./login\";\r\nexport default Login;","import React from \"react\";\r\nimport LoginReduxForm from \"./loginForm\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Login = ({login, isAuth}) => {\r\n    const onSubmit = (formData) => {\r\n        const {email, password, rememberMe} = formData;\r\n        login(email, password, rememberMe);\r\n    };\r\n    if (isAuth) return <Redirect to={'/profile'}/>;\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\nexport default connect(mapStateToProps ,{login})(Login);","import {getAuth} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'APP/INITIALIZED_SUCCESS';\r\nconst initialState = {\r\n    initialized: false\r\n};\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\nexport default appReducer;\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let dispatchResult = dispatch(getAuth());\r\n    dispatchResult\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};","let initialState = {\r\n    friends: [\r\n\r\n        {id: 4, name:'Anton', photo: 'https://im.kommersant.ru/Issues.photo/CORP/2019/03/01/KMO_111307_24199_1_t218_162046.jpg'},\r\n        {id: 4, name:'Anton', photo: 'https://im.kommersant.ru/Issues.photo/CORP/2019/03/01/KMO_111307_24199_1_t218_162046.jpg'},\r\n        {id: 4, name:'Anton', photo: 'https://im.kommersant.ru/Issues.photo/CORP/2019/03/01/KMO_111307_24199_1_t218_162046.jpg'},\r\n        {id: 4, name:'Anton', photo: 'https://im.kommersant.ru/Issues.photo/CORP/2019/03/01/KMO_111307_24199_1_t218_162046.jpg'},\r\n    ]\r\n};\r\n\r\nconst sidebarReducer = (state = initialState) => {\r\n\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React, {Component, Suspense} from 'react';\r\nimport NavBar from '../nav/nav';\r\nimport {withRouter, Route, HashRouter} from \"react-router-dom\";\r\nimport './app.scss';\r\nimport Settings from \"../settings\";\r\nimport Dialogs from \"../dialogs\";\r\nimport ProfileAPI from \"../profile/profileAPI\";\r\nimport UsersAPI from \"../users/usersAPI\";\r\nimport HeaderAPI from \"../header/headerAPI\";\r\nimport Login from \"../login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"../../redux/appReducer\";\r\nimport Spinner from \"../common/spinner\";\r\nimport store from \"../../redux/reduxStore\";\r\n\r\nconst News = React.lazy(() => import('../news'));\r\nconst Music = React.lazy(() => import('../music'));\r\n\r\nclass App extends Component {\r\n    static propTypes = {\r\n        initializeApp: PropTypes.func,\r\n        initialized: PropTypes.bool\r\n    };\r\n    componentDidMount() {\r\n        const {initializeApp} = this.props;\r\n        initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) return <Spinner/>;\r\n        return (\r\n            <div className='app'>\r\n                <HeaderAPI/>\r\n                <NavBar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Suspense fallback={<Spinner />}>\r\n                    <Route path='/profile/:id?' render={() => <ProfileAPI/>}/>\r\n                    <Route path='/dialogs' render={() => <Dialogs/>}/>\r\n                    <Route path='/music' component={Music}/>\r\n                    <Route path='/news' component={News}/>\r\n                    <Route path='/users' render={() => <UsersAPI/>}/>\r\n                    <Route path='/settings' component={Settings}/>\r\n                    <Route path='/login' component={Login}/>\r\n                    </Suspense>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    };\r\n};\r\nlet AppContainer = compose(withRouter,connect(mapStateToProps, {initializeApp}))(App);\r\nconst MainApp = () => {\r\n    return (\r\n        <HashRouter >\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </HashRouter>\r\n    );\r\n};\r\nexport default MainApp;","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport MainApp from \"./component/app/app\";\r\n\r\n\r\nReactDOM.render(<MainApp/>, document.getElementById('root'));\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"formControls_formControl__nwszG\",\"error\":\"formControls_error__23Zih\",\"summaryError\":\"formControls_summaryError__4h2HN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"profileInfo_description__3o5_0\",\"profilePhoto\":\"profileInfo_profilePhoto__splgS\",\"contacts\":\"profileInfo_contacts__3I2Gx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__14W0_\",\"messages\":\"dialogs_messages__Odv3N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"paginator_paginator__2ARdb\",\"pageNumber\":\"paginator_pageNumber__2YQgy\",\"selectedPage\":\"paginator_selectedPage__2Px8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialog_dialog__SgFmC\",\"active\":\"dialog_active__2_S4l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"spinner_preloader__1jMg2\",\"spinner\":\"spinner_spinner__1Hetg\",\"spin\":\"spinner_spin__A_APw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__18sGI\",\"loginBlock\":\"header_loginBlock__2ztlx\"};"],"sourceRoot":""}